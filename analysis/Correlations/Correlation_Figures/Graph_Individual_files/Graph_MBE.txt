#Correlations for DEST

ijob -A jcbnunez -c 2 --mem=40G  --partition=standard
module load gcc/7.1.0  
module load openmpi/3.1.4
module load gdal
module load proj
module load goolf R/4.0.0
R


#############################
# Load Packages
#############################

library(adegenet)
library(tidyverse)
library(magrittr)
library(reshape2)
library(vroom)
library(reshape2)
library(FactoMineR)
library(factoextra)
library(vcfR)
library(patchwork)
library(reshape2)
library(zoo)
library(matrixStats)
library(data.table)
library(SeqArray)
library(LEA)
library(gdsfmt)
library(SNPRelate)
library(patchwork)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggExtra)
library(vcfR)
library(gdata)
library(ggcorrplot)
library(epiR)
library(rcompanion)

#############################
# MBE data
#############################

load("./MBE_data.Rdata")

MBE_data %<>% mutate(MBE_NEFF = (DP_MBE*nFlies)/(DP_MBE+nFlies) )

######### ######### ######### #########
# Allele Frequencies
MBE_data %>% ggplot(aes(x=FREQ_MBE, y=dest_af)) + geom_hex() + geom_abline(slope =1) + facet_wrap(~sampleId)  +
  scale_fill_gradientn(colours = terrain.colors(10)) + theme_bw() + theme(legend.pos = "right", text = element_text(size=6)) + scale_y_continuous(
  labels = scales::number_format(accuracy = 0.1,
                                 decimal.mark = '.')) + scale_x_continuous(
  labels = scales::number_format(accuracy = 0.1,
                                 decimal.mark = '.')) + xlab("AF MBE")+ ylab("AF DEST")+ ggtitle("DEST vs MBE") -> MBE_af_corrs

ggsave("MBE_af_corrs.pdf", MBE_af_corrs, width = 9, height = 8)

######### ######### ######### #########
# Effective Coverage
MBE_data %>% ggplot(aes(x=MBE_NEFF, y=dest_neff)) + geom_hex() + geom_abline(slope =1) + facet_wrap(~sampleId, scales = "free")  +
  scale_fill_gradientn(colours = terrain.colors(10)) + theme_bw() + theme(legend.pos = "right", text = element_text(size=6)) + scale_y_continuous(
  labels = scales::number_format(accuracy = 1,
                                 decimal.mark = '.')) + scale_x_continuous(
  labels = scales::number_format(accuracy = 1,
                                 decimal.mark = '.')) + xlab("EFF COV MBE")+ ylab("EFF COV DEST")+ ggtitle("DEST vs MBE") -> MBE_neff_corrs

ggsave("MBE_neff_corrs.pdf", MBE_neff_corrs, width = 9, height = 8)

######### ######### ######### #########
# Nominal Coverage
MBE_data %>% ggplot(aes(x=DP_MBE, y=dest_dp)) + geom_hex() + geom_abline(slope =1) + facet_wrap(~sampleId, scales = "free")  +
  scale_fill_gradientn(colours = terrain.colors(10)) + theme_bw() + theme(legend.pos = "right", text = element_text(size=6)) + scale_y_continuous(
  labels = scales::number_format(accuracy = 1,
                                 decimal.mark = '.')) + scale_x_continuous(
  labels = scales::number_format(accuracy = 1,
                                 decimal.mark = '.')) + xlab("DP MBE")+ ylab("DP DEST")+ ggtitle("DEST vs MBE") -> MBE_dp_corrs

ggsave("MBE_dp_corrs.pdf", MBE_dp_corrs, width = 9, height = 8)


######### ######### ######### #########
#Estimate Concordance correlation coefficients
######### ######### ######### #########

MBE_data$sampleId %>% unique -> sample_ids

################ REAL ################

output = data.frame(sample=sample_ids)

for(i in 1:length(sample_ids)){

# Concordance Correlation
#FREQ_MBE	
epi.ccc(MBE_data$FREQ_MBE[which(MBE_data$sampleId == sample_ids[i])], 
		 MBE_data$dest_af[which(MBE_data$sampleId == sample_ids[i])]
		) -> tmp_FREQ_MBE
	
	output$AF_CC[i] = tmp_FREQ_MBE$rho.c[1]

# neff
epi.ccc(MBE_data$MBE_NEFF[which(MBE_data$sampleId == sample_ids[i])], 
		 MBE_data$dest_neff[which(MBE_data$sampleId == sample_ids[i])]
		) -> tmp_neff

	output$NEFF_CC[i] = tmp_neff$rho.c[1]

# nom cov
epi.ccc(MBE_data$DP_MBE[which(MBE_data$sampleId == sample_ids[i])], 
		 MBE_data$dest_dp[which(MBE_data$sampleId == sample_ids[i])]
		) -> tmp_nom

	output$NCOV_CC[i] = tmp_nom$rho.c[1]


# Regular Correlation
#FREQ_MBE	
cor.test(MBE_data$FREQ_MBE[which(MBE_data$sampleId == sample_ids[i])], 
		 MBE_data$dest_af[which(MBE_data$sampleId == sample_ids[i])]
		) -> tmp_FREQ_MBE
	
	output$AF_CO[i] = tmp_FREQ_MBE$estimate

# neff
cor.test(MBE_data$MBE_NEFF[which(MBE_data$sampleId == sample_ids[i])], 
		 MBE_data$dest_neff[which(MBE_data$sampleId == sample_ids[i])]
		) -> tmp_neff

	output$NEFF_CO[i] = tmp_neff$estimate

# nom cov
cor.test(MBE_data$DP_MBE[which(MBE_data$sampleId == sample_ids[i])], 
		 MBE_data$dest_dp[which(MBE_data$sampleId == sample_ids[i])]
		) -> tmp_nom

	output$NCOV_CO[i] = tmp_nom$estimate


	output$comparison[i] = "MBE"
	output$type[i] = "actual"

}


################ RANDOM ################

output_random = data.frame(sample=1:1000)

for(i in 1:dim(output_random)[1]){

epi.ccc( x=MBE_data$FREQ_MBE[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])],
		 y=MBE_data$dest_af[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])]
		 ) -> tmp_FREQ_MBE

		output_random$AF_CC[i] = tmp_FREQ_MBE$rho.c[1]

epi.ccc( x=MBE_data$MBE_NEFF[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])],
		 y=MBE_data$dest_neff[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])]
		 ) -> tmp_neff

		output_random$NEFF_CC[i] = tmp_neff$rho.c[1]
	
		
epi.ccc( x=MBE_data$DP_MBE[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])],
		 y=MBE_data$dest_neff[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])]
		 ) -> tmp_nom

		output_random$NCOV_CC[i] = tmp_nom$rho.c[1]
		
		
		
		
		
cor.test( x=MBE_data$FREQ_MBE[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])],
		 y=MBE_data$dest_af[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])]
		 ) -> tmp_FREQ_MBE

		output_random$AF_CO[i] = tmp_FREQ_MBE$estimate

cor.test( x=MBE_data$MBE_NEFF[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])],
		 y=MBE_data$dest_neff[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])]
		 ) -> tmp_neff

		output_random$NEFF_CO[i] = tmp_neff$estimate
	
		
cor.test( x=MBE_data$DP_MBE[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])],
		 y=MBE_data$dest_neff[which(MBE_data$sampleId == sample_ids[sample(1:length(sample_ids),1)])]
		 ) -> tmp_nom

		output_random$NCOV_CO[i] = tmp_nom$estimate
	
		
		

	output_random$comparison[i] = "MBE"
	output_random$type[i] = "Random"
		
}



############## MERGE ##################

rbind(output, output_random) -> MBE_AF
sapply(MBE_AF, class)

MBE_AF[,c("FREQ_MBE_CC","NEFF_CC", "NCOV_CC", "FREQ_MBE_CO","NEFF_CO", "NCOV_CO")] = sapply(MBE_AF[,c("FREQ_MBE_CC","NEFF_CC", "NCOV_CC", "FREQ_MBE_CO","NEFF_CO", "NCOV_CO")], as.numeric)
sapply(MBE_AF, class)


save(MBE_AF, file="./MBE_AF.Rdata")

