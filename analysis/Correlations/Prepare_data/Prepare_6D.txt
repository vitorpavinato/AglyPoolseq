#Correlations for DEST

ijob -A jcbnunez -c 2 --mem=40G  --partition=standard
module load gcc/7.1.0  
module load openmpi/3.1.4
module load gdal
module load proj
module load goolf R/4.0.0
R


#############################
# Load Packages
#############################

library(adegenet)
library(tidyverse)
library(magrittr)
library(reshape2)
library(vroom)
library(reshape2)
library(FactoMineR)
library(factoextra)
library(vcfR)
library(patchwork)
library(reshape2)
library(zoo)
library(matrixStats)
library(data.table)
library(SeqArray)
library(LEA)
library(gdsfmt)
library(SNPRelate)
library(patchwork)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggExtra)
library(vcfR)
library(gdata)
library(ggcorrplot)

#############################
# Dest data
#############################

### open DEST data to get new allele frequencies at same sites

  ### open GDS file
    genofile <- seqOpen("/scratch/aob2x/dest/dest.all.PoolSNP.001.50.ann.gds")

  ### make SNP table
    seqResetFilter(genofile)

    snps.dt <- data.table(dm6_chr=seqGetData(genofile, "chromosome"),
                          dm6_pos=seqGetData(genofile, "position"),
                          variant.id=seqGetData(genofile, "variant.id"),
                          nAlleles=seqNumAllele(genofile))
    snps.dt <- snps.dt[nAlleles==2]
    
    
#############################
# sixD's data
#############################
  
load("./Bergland.vcf.df.Rdata")

Bergland.vcf.df %<>% mutate(SNP_id = paste(CHROM,Pos_6d, sep = "_"))

Bergland.vcf.df$SNP_id %>% unique -> all_snp_pos

all_snp_pos[sample(length(all_snp_pos),10000)] -> Selected_loci

Bergland.vcf.df_10k =  Bergland.vcf.df[which(Bergland.vcf.df$SNP_id %in% Selected_loci),]

  ### load liftover table
liftover <- fread("/scratch/yey2sn/DEST/utils/dest.all.PoolSNP.001.50.dm3.dm6.csv.gz")

setnames(Bergland.vcf.df_10k, c("CHROM", "Pos_6d"), c("dm3_chr", "dm3_pos"))

# Convert the data frame into a data table
setDT(Bergland.vcf.df_10k)
Bergland.vcf.df_10k$dm3_pos = as.numeric(Bergland.vcf.df_10k$dm3_pos)

setkey(Bergland.vcf.df_10k, dm3_chr, dm3_pos)
setkey(liftover, dm3_chr, dm3_pos)

# Complete the liftover
Bergland.vcf.df_10k =  merge(Bergland.vcf.df_10k, liftover)

#Match the names of DEST to those of 6D

metadat_6d = read.delim2("./metadata_6d.txt")
setnames(metadat_6d, c("sra_sampleName"), c("Pop_6d"))

dat.sub = left_join(Bergland.vcf.df_10k, metadat_6d)


###############################################
  ### merge 6D's data with DEST data
###############################################
  
    setnames(dat.sub, c("Sample"), c("sampleId"))
    setkey(dat.sub, dm6_chr, dm6_pos)
    dat.sub <- merge(dat.sub, snps.dt)

  ### get allele frequency estimates from DEST data
    seqSetFilter(genofile, 
    sample.id=as.character(unique(dat.sub$sampleId)),
                  variant.id=unique(dat.sub$variant.id))

  ### format data for merge
    ad <- seqGetData(genofile, "annotation/format/AD")
    dp <- seqGetData(genofile, "annotation/format/DP")

  ### allele frequencies
    altAF.dt <- as.data.table(ad$data/dp)
    setnames(altAF.dt, names(altAF.dt), as.character(seqGetData(genofile, "variant.id")) )
    altAF.dt[,sampleId:=seqGetData(genofile, "sample.id")]
    altAF.l.dt <- melt(altAF.dt, "sampleId")
    setnames(altAF.l.dt, c("variable", "value"), c("variant.id", "dest_af"))

  ### read depths
    dp.dt <- as.data.table(dp)
    setnames(dp.dt, names(dp.dt), as.character(seqGetData(genofile, "variant.id")))
    dp.dt[,sampleId:=seqGetData(genofile, "sample.id")]
    dp.l.dt <- melt(dp.dt, "sampleId")
    setnames(dp.l.dt, c("variable", "value"), c("variant.id", "dest_dp"))

  ### dest
    setkey(altAF.l.dt, variant.id, sampleId)
    setkey(dp.l.dt, variant.id, sampleId)

    dest <- merge(altAF.l.dt, dp.l.dt)
    dest[,variant.id:=as.numeric(as.character(variant.id))]

### merge DrosRTEC + DEST
  ### get target populations
  samps <- fread("/scratch/yey2sn/DEST/populationInfo/samps.csv")
  
  setkey(dest, variant.id, sampleId)
  setkey(dat.sub, variant.id, sampleId)
  m <- merge(dat.sub, dest)
  m_metadata <- left_join(m, samps)
  m_metadata[,dest_neff:=(dest_dp*nFlies)/(dest_dp+nFlies)]
  m_metadata[,neff_6D:=(DP_6d*nFlies)/(DP_6d+nFlies)]

SixDimentions_data = m_metadata

### save
save(SixDimentions_data, file="./SixDimentionsData.Rdata")
